services:
  fastapi:
    build:
      context: ..
    command: uvicorn warehouse_service.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 1h     # проверка раз в час
      timeout: 3s
      retries: 1
      start_period: 5s  # первая проверка через 10 секун
    environment:
      DB_URL: postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      kafka:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    build:
      context: ..
    command: alembic upgrade head
    environment:
      DB_URL: postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  kafka-consumer:
    # добавляем ожидание миграций
    depends_on:
      migrations:
        condition: service_completed_successfully   # ← ждём Alembic
      kafka:
        condition: service_healthy
      kafka-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
  postgres:
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: